{
    "definitionMeta" : {
        "definitionId" : {
            "name" : "sampleEventProcessor",
            "version" : "0.1"
        },
        "description" : "For test"
    },
    "service" : "ocep.EventProcessor",
    "startupOptions" : {
        "config" : {
            "inputPorts" : [ {
                "adapterProviderName" : "KafkaAdapterProvider",
                "portName" : "sampleInEventTopic",
                "streamId" : "StockInStream",
                "extraProperties" : null
            } ],
            "outputPorts" : [ {
                "adapterProviderName" : "KafkaAdapterProvider",
                "portName" : "sampleOutEventTopic",
                "streamId" : "StockOutStream",
                "extraProperties" : null
            } ],
            "executionPlan" : [ 
                                "@Plan:name('SimpleTest1')", 
                                "define stream StockInStream (symbol string, price float,volume object);", 
                                "partition with (symbol of StockInStream)", 
                                "begin", 
                                "   @info(name = 'query') ", 
                                "   from StockInStream ", 
                                "   select symbol, sum(price) as price, volume ", 
                                "   insert into StockOutStream ;", 
                                "end;" 
            ],
            "useJunction" : false,
            "snapshotIntervalMinutes" : 1,
            "snapshotExpireMinutes" : 1440,
            "distributedExecution" : false,
            "extensions" : null,
            "dataSources" : null,
            "enableStatistics" : false
        }
    }
}

